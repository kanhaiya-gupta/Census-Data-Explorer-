name: CI-CD Pipeline for ETL Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manually triggering the workflow'
        required: false
        default: 'Manual run requested'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Step 3: Install dependencies for testing
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt flake8 pytest

      # Step 4: Run linting with flake8
      - name: Lint with flake8
        run: |
          flake8 . --max-line-length=88 --extend-ignore=E203 --exit-zero

      # Step 5: Run tests with pytest
      - name: Run tests
        run: |
          pytest tests/ --verbose

  build:
    runs-on: ubuntu-latest
    needs: test  # Only runs if the test job succeeds

    steps:
      # Step 1: Check out the repository code with full history
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for branch operations

      # Step 2: Set up Python environment
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Step 3: Install dependencies for building/running
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

      # Step 4: Verify installed versions (for debugging)
      - name: Check package versions
        run: |
          pip list | grep -E 'pandas|numpy|sqlalchemy|matplotlib'

      # Step 5: Run ETL pipeline
      - name: Run ETL pipeline
        run: |
          python main.py

      # Step 6: Create and push results to a new branch
      - name: Commit and push results to new branch
        run: |
          # Configure git user
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

          # Create a new branch name based on the commit SHA
          BRANCH_NAME="results-${{ github.sha }}"

          # Check if the branch already exists and delete it if it does
          git fetch origin
          if git ls-remote --heads origin "$BRANCH_NAME" | grep -q "$BRANCH_NAME"; then
            git push origin --delete "$BRANCH_NAME"
          fi

          # Switch to a new branch
          git checkout -b "$BRANCH_NAME"

          # Add and commit the results directory
          git add results/
          git commit -m "Add ETL pipeline results from commit ${{ github.sha }}"

          # Push the branch to the repository
          git push origin "$BRANCH_NAME"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 7: Log manual trigger reason (if applicable)
      - name: Log manual trigger reason
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "Workflow manually triggered. Reason: ${{ github.event.inputs.reason }}"