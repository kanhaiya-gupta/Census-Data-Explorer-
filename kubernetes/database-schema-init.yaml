apiVersion: batch/v1
kind: Job
metadata:
  name: database-schema-init
  namespace: census
spec:
  template:
    spec:
      containers:
      - name: init
        image: localhost:5000/census-database:latest
        command: ["python"]
        args:
        - "-c"
        - |
          import sqlite3
          import os

          db_path = '/data/census.sqlite'
          
          # Create the database file if it doesn't exist
          if not os.path.exists(db_path):
              with open(db_path, 'w') as f:
                  pass
              os.chmod(db_path, 0o666)
          
          conn = sqlite3.connect(db_path)
          cursor = conn.cursor()

          # Create tables
          cursor.execute('''
          CREATE TABLE IF NOT EXISTS census (
              id INTEGER PRIMARY KEY AUTOINCREMENT,
              year INTEGER,
              state TEXT,
              population INTEGER,
              households INTEGER,
              median_income REAL
          )
          ''')

          cursor.execute('''
          CREATE TABLE IF NOT EXISTS state_fact (
              id INTEGER PRIMARY KEY AUTOINCREMENT,
              state TEXT,
              fact_type TEXT,
              fact_value TEXT
          )
          ''')

          # Insert sample data
          sample_census_data = [
              (2020, 'California', 39538223, 13700000, 75000.0),
              (2020, 'Texas', 29145505, 10000000, 65000.0),
              (2020, 'Florida', 21538187, 8000000, 60000.0),
              (2020, 'New York', 20201249, 7000000, 70000.0)
          ]

          sample_state_facts = [
              ('California', 'Capital', 'Sacramento'),
              ('Texas', 'Capital', 'Austin'),
              ('Florida', 'Capital', 'Tallahassee'),
              ('New York', 'Capital', 'Albany')
          ]

          cursor.executemany('INSERT INTO census (year, state, population, households, median_income) VALUES (?, ?, ?, ?, ?)', sample_census_data)
          cursor.executemany('INSERT INTO state_fact (state, fact_type, fact_value) VALUES (?, ?, ?)', sample_state_facts)
          conn.commit()
          conn.close()
          print("Database schema initialized successfully")
        volumeMounts:
        - name: data-volume
          mountPath: /data
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: census-pvc
      restartPolicy: Never
  backoffLimit: 4 